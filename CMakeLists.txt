cmake_minimum_required(VERSION 3.7)
project(untitled)

set(CMAKE_CXX_STANDARD 11)



set(SOURCE_FILES No54_SprialMatrix.cpp No59_Medium_SprialMatrix2.cpp backTrack/No51_Hard_NQueens.cpp No53_MaxSubarray.cpp No55_JumpGame.cpp No45_JumpGame2.cpp No1_TwoSum.cpp No2_AddTwoInteger.cpp No3_LongestSubStrWithoutRepeatChar.cpp No4_Hard_MedianOfTwoSortedArray.cpp No26_RemoveDuplicateNumberFromSortedArray.cpp dynamicProgramming/No32_LongestValidParentheses.cpp dynamicProgramming/Exer1_DistanceBetweenTwoStrings.cpp dynamicProgramming/Exer2_LongestCommonSubsequence.cpp dynamicProgramming/Exer3_LongestIncreasingSubsequence.cpp dynamicProgramming/No62_UniquePaths.cpp dynamicProgramming/No63_UniquePaths2.cpp dynamicProgramming/No64_Medium_MinimumPathNum.cpp dynamicProgramming/No85_Hard_MaximalRectangle.cpp No23_Hard_MergeKSortedLists.cpp No25_Hard_ReverseKGroupLists.cpp No76_Hard_MinimunWindowSubstring.cpp No37_Hard_SudokuSolver.cpp No30_Hard_SubstringWithCancatenationOfWords.cpp No82_Medium_RemoveDuplicateFromSortedLists.cpp backTrack/No39_Medium_CombinationSum.cpp backTrack/No40_Medium_CombinationSum2.cpp backTrack/No46_Medium_Permutation.cpp backTrack/No47_Medium_Permutation2.cpp backTrack/No31_Medium_NextPermutation.cpp No42_Hard_TrappingRainWater.cpp tree/No101_Easy_SymmetricTree.cpp tree/No95_Medium_GenerateBinarySearchTreeII.cpp tree/No96_Medium_GenerateBinarySearchTree.cpp string/No5_Medium_LongestPalindromicString.cpp No6_Medium_ZigZagConversion.cpp dynamicProgramming/No10_Hard_RegularExpressionMatching.cpp twoPointers/No16_Medium_ThreeSumClosest.cpp twoPointers/No18_Medium_FourSum.cpp twoPointers/No11_Medium_ContainerWithMostWater.cpp tree/No114_Medium_FlattenBinaryToLinkedList.cpp bit_manipulation/No260_Medium_SingleNumberIII.cpp No264_Medium_UglyNumber2.cpp No313_Medium_SuperUglyNumber.cpp dynamicProgramming/No279_Medium_PerfectSquares.cpp No282_Hard_ExpressionAddOperators.cpp No299_Medium_BullsAndCows.cpp No283_Easy_MoveZeroes.cpp No128_Hard_LongestConsecutiveSequence.cpp tree/No103_Medium_ZigZagOrderTraversal.cpp dynamicProgramming/No115_Hard_DistinctSequences.cpp dynamicProgramming/No120_Medium_Triangle.cpp dynamicProgramming/No123_Hard_BestTimeToBuyAndSellStocksIII.cpp tree/No124_Hard_BTMaxPathSum.cpp graph/No127_Medium_WordLadder.cpp graph/No126_Hard_WordLadderII.cpp graph/No130_Medium_SurroundedRegions.cpp No131_Medium_PalindromePartitioning.cpp No132_Hard_PalindromePartitioningII.cpp graph/No133_Medium_CloneGraph.cpp dynamicProgramming/No139_Medium_WordBreak.cpp dynamicProgramming/No140_Hard_WordBreakII.cpp No134_Medium_GasStation.cpp greedy/No135_Hard_Candy.cpp No56_Medium_MergeIntervals.cpp No57_Hard_InsertIntervals.cpp No73_Medium_SetMatrixZeros.cpp backTrack/No77_Medium_Combination.cpp tree/No208_Medium_ImplementTrieTree.cpp backTrack/No79_Medium_WordSearch.cpp backTrack/No80_Hard_WordSearchII.cpp graph/No207_Medium_CourseSchedule.cpp graph/No210_Medium_CourseScheduleII.cpp greedy/No630_Hard_CourseScheduleIII.cpp dynamicProgramming/No198_Easy_HouseRobber.cpp dynamicProgramming/No213_Medium_HouseRobberII.cpp dynamicProgramming/No337_Medium_HouseRobberIII.cpp twoPointers/No209_Medium_MinimumSubarraySum.cpp string/No214_Hard_ShortestPalindrome.cpp dynamicProgramming/No174_Hard_DungeonGame.cpp backTrack/No78_Medium_Subsets.cpp dynamicProgramming/No97_Hard_InterleavingString.cpp backTrack/Exer1_VirusInfection.cpp backTrack/Exer2_FindEquations.cpp No621_Medium_TaskScheduler.cpp backTrack/Exer3_Lines.cpp array/No448_Easy_FindNumsDisappearedInArray.cpp twoPointers/No632_Hard_TwoPointers.cpp bit_manipulation/No461_Easy_HammingCount.cpp greedy/No406_Medium_QueueReconstructionByHeight.cpp tree/No437_Easy_PathSumIII.cpp string/No394_Medium_DecodeString.cpp dynamicProgramming/No416_Medium_PartitionSubset.cpp dynamicProgramming/No494_Medium_TargetSum.cpp dynamicProgramming/No377_Medium_CombinationIV.cpp graph/No310_Medium_MinimunHeightTree.cpp dynamicProgramming/No188_Hard_BestTimeToBuyAndSellStocksIV.cpp dynamicProgramming/No309_Medium_BestTimeToBuyAndSellStockWithColldown.cpp No214_Hard_ShortestPalindrome.cpp string/No10_Hard_RegularExpressionMatch.cpp)
add_executable(untitled ${SOURCE_FILES})